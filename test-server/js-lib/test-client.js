// Generated by CoffeeScript 1.10.0
(function() {
  var ClientView, CompositeDisposable, TestClient, TestClientView;

  TestClientView = require('./test-client-view');

  CompositeDisposable = require('atom').CompositeDisposable;

  ClientView = require('./client-view');

  module.exports = TestClient = {
    testClientView: null,
    modalPanel: null,
    subscriptions: null,
    activate: function(state) {
      this.testClientView = new TestClientView(state.testClientViewState);
      this.modalPanel = atom.workspace.addModalPanel({
        item: this.testClientView.getElement(),
        visible: false
      });
      this.clientView = new ClientView();
      this.leftPanel = atom.workspace.addLeftPanel({
        item: this.clientView,
        visible: false
      });
      this.subscriptions = new CompositeDisposable;
      return this.subscriptions.add(atom.commands.add('atom-workspace', {
        'test-client:toggle': (function(_this) {
          return function() {
            return _this.toggle();
          };
        })(this)
      }));
    },
    deactivate: function() {
      this.modalPanel.destroy();
      this.clientView.destroy();
      this.subscriptions.dispose();
      return this.testClientView.destroy();
    },
    serialize: function() {
      return {
        testClientViewState: this.testClientView.serialize()
      };
    },
    toggle: function() {
      if (this.leftPanel.isVisible()) {
        return this.leftPanel.hide();
      } else {
        return this.leftPanel.show();
      }
    }
  };

}).call(this);
